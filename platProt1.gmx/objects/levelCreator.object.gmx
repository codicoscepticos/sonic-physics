<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>chunkWidth = 256
chunkHeight = 256
blockWidth = 16
blockHeight = 16
blocksColsNum = (chunkWidth/blockWidth)
blocksColsMaxIndex = blocksColsNum - 1
blocksRowsNum = (chunkHeight/blockHeight)
blocksRowsMaxIndex = blocksRowsNum - 1
chunkBlocks = blocksColsNum * blocksRowsNum
chunkBytesPerBlock = 2
chunkBlocksBytesSize = chunkBytesPerBlock * chunkBlocks
blocksTilesBgColsNum = 16
tilesDepth = 1000000

//ghz1Room = room_add()
ghz1ChunksIDs = file_bin_open(working_directory + "LevelsData/ghz1.bin", 0)
ghz1BlocksIDs = file_bin_open(working_directory + "TilesData/Chunks.bin", 0)
chunksColsMaxIndex = file_bin_read_byte(ghz1ChunksIDs)
chunksColsNum = chunksColsMaxIndex + 1
ghz1RoomWidth = chunksColsNum * chunkWidth
//room_set_width(ghz1Room, ghz1RoomWidth)
file_bin_seek(ghz1ChunksIDs, 1); chunksRowsMaxIndex = file_bin_read_byte(ghz1ChunksIDs)
chunksRowsNum = chunksRowsMaxIndex + 1
ghz1RoomHeight = chunksRowsNum * chunkHeight
//room_set_height(ghz1Room, ghz1RoomHeight)

for (chunkRowIndex = 0; chunkRowIndex &lt;= chunksRowsMaxIndex; chunkRowIndex++)
{
    chunkY = chunkRowIndex * chunkHeight
    
    for (chunkColIndex = 0; chunkColIndex &lt;= chunksColsMaxIndex; chunkColIndex++)
    {
        pointer = chunkRowIndex * chunksColsNum + chunkColIndex + 2
        file_bin_seek(ghz1ChunksIDs, pointer); chunkID = file_bin_read_byte(ghz1ChunksIDs)
        if (chunkID &gt; 0)
        {
            if (chunkID &gt; 180) chunkID -= 128; chunkID--
            chunkPointerStart = chunkID * chunkBlocksBytesSize
            chunkX = chunkColIndex * chunkWidth
            
            for (blockRowIndex = 0; blockRowIndex &lt;= blocksRowsMaxIndex; blockRowIndex++)
            {
                blockY = chunkY + blockRowIndex * blockHeight
                
                for (blockColIndex = 0; blockColIndex &lt;= blocksColsMaxIndex; blockColIndex++)
                {
                    firstBytePointer = chunkPointerStart + 2 * blockRowIndex * blocksColsNum + 2 * blockColIndex
                    file_bin_seek(ghz1BlocksIDs, firstBytePointer); firstByteValue = file_bin_read_byte(ghz1BlocksIDs)
                    secondBytePointer = firstBytePointer + 1
                    file_bin_seek(ghz1BlocksIDs, secondBytePointer); secondByteValue = file_bin_read_byte(ghz1BlocksIDs)
                    blockID = secondByteValue
                    firstByteValueString = dec2hexString(firstByteValue)
                    firstByteValueLastDigitString = string_char_at(firstByteValueString, string_length(firstByteValueString))
                    //For the below line: it needs to convert the real value back to the hexadecimal one, in order for the
                    //condition to have meaning and thus work as intended.
                    if (firstByteValueLastDigitString == "1" or firstByteValueLastDigitString == "9") blockID += 256
                    
                    blockXonBlocksTilesBg = (blockID mod blocksTilesBgColsNum) * blockWidth
                    blockYonBlocksTilesBg = floor(blockID/(blocksTilesBgColsNum)) * blockHeight
                    blockX = chunkX + blockColIndex * blockWidth
                    tile_add(blocksTilesBg, blockXonBlocksTilesBg, blockYonBlocksTilesBg, blockWidth, blockHeight, blockX, blockY, tilesDepth)
                }
            }
        }
    }
}

file_bin_close(ghz1ChunksIDs)
file_bin_close(ghz1BlocksIDs)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
